<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>10</zoom_level><element><type>CustomElementImpl</type><coordinates><x>800</x><y>280</y><w>170</w><h>60</h></coordinates><panel_attributes>uwetype=navigationClass
VideoPortal
 
[isHome]</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>500</x><y>280</y><w>170</w><h>60</h></coordinates><panel_attributes>uwetype=menu
MainMenu
 
[isLandmark]</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>1000</x><y>430</y><w>170</w><h>30</h></coordinates><panel_attributes>uwetype=navigationClass
SearchForm</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>960</x><y>310</y><w>150</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;20;130;20;130;120</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>1000</x><y>570</y><w>170</w><h>30</h></coordinates><panel_attributes>uwetype=query
SearchVideo
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1010</x><y>445</y><w>162</w><h>148</h></coordinates><panel_attributes>lt=&lt;-
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>80;124;80;13</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1070</x><y>575</y><w>40</w><h>108</h></coordinates><panel_attributes>lt=&lt;-
</panel_attributes><additional_attributes>20;84;20;23</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>1000</x><y>660</y><w>170</w><h>30</h></coordinates><panel_attributes>uwetype=index
VideoIndex</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>930</x><y>322</y><w>180</w><h>470</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;18;20;138;20;448;160;450;160;368</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>730</x><y>450</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=navigationClass
Login</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>730</x><y>550</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
// "&lt;&gt;" inserts the name of the UWE stereotype in the second line
// "--" draws a horizontal line
// /italic/ means abstract
// _text_ will be underlined etc.
&lt;&gt;
Login 
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>670</x><y>470</y><w>162</w><h>100</h></coordinates><panel_attributes>lt=&lt;-
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>80;80;80;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>520</x><y>326</y><w>230</w><h>182</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;navigationLink&gt;&gt;
Guest</panel_attributes><additional_attributes>90;14;90;144;210;144</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>1280</x><y>210</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=navigationClass
UserPage</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>140</x><y>280</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=navigationClass
VideoUpload</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>80</x><y>296</y><w>162</w><h>138</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>80;24;80;114</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>260</x><y>296</y><w>70</w><h>138</h></coordinates><panel_attributes>lt=-&gt;
 
Error</panel_attributes><additional_attributes>30;114;30;24</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>140</x><y>410</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
&lt;&lt;processClass&gt;&gt;
UploadVideo</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>660</x><y>310</y><w>160</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;20;140;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1160</x><y>236</y><w>220</w><h>228</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>200;10;200;204;10;204</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>300</x><y>256</y><w>220</w><h>72</h></coordinates><panel_attributes>lt=&lt;-
&lt;&lt;navigationLink&gt;&gt;
User</panel_attributes><additional_attributes>10;34;200;34</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>50</x><y>210</y><w>1250</w><h>240</h></coordinates><panel_attributes>lt=&lt;-
success</panel_attributes><additional_attributes>1230;20;40;20;40;220;90;220</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>850</x><y>466</y><w>70</w><h>108</h></coordinates><panel_attributes>lt=-&gt;
 
Error</panel_attributes><additional_attributes>30;84;30;24</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>800</x><y>240</y><w>610</w><h>580</h></coordinates><panel_attributes>lt=&lt;-
success</panel_attributes><additional_attributes>590;10;590;560;20;560;20;350</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>210</x><y>325</y><w>310</w><h>240</h></coordinates><panel_attributes>lt=&gt;-
&lt;&lt;navigationLink&gt;&gt;
User</panel_attributes><additional_attributes>290;15;190;15;190;185;20;185;20;225</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>130</x><y>550</y><w>180</w><h>30</h></coordinates><panel_attributes>uwetype=query
getUserPreferences</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>210</x><y>569</y><w>150</w><h>142</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>130;120;20;121;20;11</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>340</x><y>670</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=navigationClass
Preferences</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>340</x><y>566</y><w>172</w><h>128</h></coordinates><panel_attributes>lt=&lt;-
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>90;24;90;104</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>340</x><y>550</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
// "&lt;&gt;" inserts the name of the UWE stereotype in the second line
// "--" draws a horizontal line
// /italic/ means abstract
// _text_ will be underlined etc.
&lt;&gt;
EditPreferences
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>490</x><y>576</y><w>162</w><h>138</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>20;114;80;114;80;14</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>540</x><y>550</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
// "&lt;&gt;" inserts the name of the UWE stereotype in the second line
// "--" draws a horizontal line
// /italic/ means abstract
// _text_ will be underlined etc.
&lt;&gt;
DeleteAccount
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>670</x><y>330</y><w>280</w><h>330</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>260;10;260;310;20;310;20;260</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>1120</x><y>270</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
// "&lt;&gt;" inserts the name of the UWE stereotype in the second line
// "--" draws a horizontal line
// /italic/ means abstract
// _text_ will be underlined etc.
&lt;&gt;
DeleteVideo
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>950</x><y>256</y><w>190</w><h>72</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;processLink&gt;&gt;
Video owner/Admin</panel_attributes><additional_attributes>20;34;170;34</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1170</x><y>226</y><w>172</w><h>178</h></coordinates><panel_attributes>lt=&lt;-
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>30;84;30;154;150;154;150;24</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>500</x><y>130</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
// "&lt;&gt;" inserts the name of the UWE stereotype in the second line
// "--" draws a horizontal line
// /italic/ means abstract
// _text_ will be underlined etc.
&lt;&gt;
Logout
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>500</x><y>146</y><w>162</w><h>158</h></coordinates><panel_attributes>lt=-&lt;
&lt;&lt;processLink&gt;&gt;
User/Admin</panel_attributes><additional_attributes>80;24;80;134</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>650</x><y>130</y><w>210</w><h>170</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>190;150;190;20;20;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>650</x><y>266</y><w>180</w><h>72</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;navigationLink&gt;&gt;
All</panel_attributes><additional_attributes>20;34;150;34</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>830</x><y>100</y><w>170</w><h>30</h></coordinates><panel_attributes>uwetype=query
&lt;&gt;</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>1050</x><y>100</y><w>170</w><h>30</h></coordinates><panel_attributes>uwetype=navigationClass
&lt;&gt;</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>1050</x><y>180</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
// "&lt;&gt;" inserts the name of the UWE stereotype in the second line
// "--" draws a horizontal line
// /italic/ means abstract
// _text_ will be underlined etc.
&lt;&gt;
Download</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1040</x><y>116</y><w>172</w><h>88</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>90;14;90;64</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>830</x><y>106</y><w>180</w><h>198</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;navigationLink&gt;&gt;
</panel_attributes><additional_attributes>90;174;90;84;90;24</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>980</x><y>90</y><w>90</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>70;20;20;20</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>260</x><y>20</y><w>170</w><h>40</h></coordinates><panel_attributes>uwetype=processClass
// "&lt;&gt;" inserts the name of the UWE stereotype in the second line
// "--" draws a horizontal line
// /italic/ means abstract
// _text_ will be underlined etc.
&lt;&gt;
CreateAccount
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>260</x><y>140</y><w>170</w><h>30</h></coordinates><panel_attributes>uwetype=navigationClass
Register</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>320</x><y>146</y><w>240</w><h>158</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;navigationLink&gt;&gt;
Guest</panel_attributes><additional_attributes>220;134;220;104;10;104;10;24</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>200</x><y>36</y><w>172</w><h>128</h></coordinates><panel_attributes>lt=&lt;-
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>90;24;90;104</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>420</x><y>10</y><w>990</w><h>220</h></coordinates><panel_attributes>lt=&lt;-
success</panel_attributes><additional_attributes>940;200;940;30;10;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>370</x><y>40</y><w>70</w><h>120</h></coordinates><panel_attributes>lt=&lt;-
Error</panel_attributes><additional_attributes>30;100;30;20</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>130</x><y>800</y><w>170</w><h>30</h></coordinates><panel_attributes>uwetype=navigationClass
AdminUserList</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>0</x><y>325</y><w>560</w><h>510</h></coordinates><panel_attributes>lt=&gt;-
&lt;&lt;navigationLink&gt;&gt;
Admin</panel_attributes><additional_attributes>540;15;540;205;90;205;90;495;130;495</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>70</x><y>566</y><w>180</w><h>258</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;navigationLink&gt;&gt;</panel_attributes><additional_attributes>90;234;90;14</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>290</x><y>576</y><w>432</w><h>258</h></coordinates><panel_attributes>lt=-&gt;
&lt;&lt;processLink&gt;&gt;</panel_attributes><additional_attributes>10;234;350;234;350;14</additional_attributes></element></umlet_diagram>