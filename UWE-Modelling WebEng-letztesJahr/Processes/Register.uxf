<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>10</zoom_level><element><type>com.umlet.element.base.Relation</type><coordinates><x>150</x><y>240</y><w>40</w><h>120</h></coordinates><panel_attributes>lt=&lt;-
m2=Name
m1=name</panel_attributes><additional_attributes>20;100;20;10</additional_attributes></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>160</x><y>220</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>CustomElementImpl</type><coordinates><x>100</x><y>80</y><w>530</w><h>140</h></coordinates><panel_attributes>uwetype=userAction
Register</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>580</x><y>220</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>550</x><y>230</y><w>84</w><h>440</h></coordinates><panel_attributes>lt=&lt;-
m1=password2
m2=Password2</panel_attributes><additional_attributes>40;420;40;20</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>660</x><y>250</y><w>160</w><h>30</h></coordinates><panel_attributes>uwetype=systemAction
sendError</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>CustomElementImpl</type><coordinates><x>110</x><y>370</y><w>160</w><h>30</h></coordinates><panel_attributes>uwetype=systemAction
checkUserName
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.custom.Decision</type><coordinates><x>210</x><y>430</y><w>40</w><h>40</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>210</x><y>390</y><w>40</w><h>60</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;40;20;10</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>160</x><y>680</y><w>510</w><h>30</h></coordinates><panel_attributes>uwetype=systemAction
checkPassword</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>170</x><y>450</y><w>134</w><h>80</h></coordinates><panel_attributes>lt=&lt;-
[name != null]</panel_attributes><additional_attributes>60;60;60;20</additional_attributes></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>580</x><y>650</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>160</x><y>340</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>600</x><y>130</y><w>160</w><h>140</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>19;20;140;20;140;120</additional_attributes></element><element><type>com.umlet.element.custom.Decision</type><coordinates><x>350</x><y>750</y><w>40</w><h>40</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>350</x><y>690</y><w>40</w><h>80</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;60;20;19</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>370</x><y>460</y><w>470</w><h>330</h></coordinates><panel_attributes>lt=&lt;-
[password!=password2]</panel_attributes><additional_attributes>370;10;370;310;20;310</additional_attributes></element><element><type>com.umlet.element.custom.Decision</type><coordinates><x>720</x><y>430</y><w>40</w><h>40</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>720</x><y>260</y><w>40</w><h>190</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;20;20;170</additional_attributes></element><element><type>CustomElementImpl</type><coordinates><x>290</x><y>870</y><w>160</w><h>30</h></coordinates><panel_attributes>uwetype=systemAction
createUser</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>270</x><y>770</y><w>206</w><h>120</h></coordinates><panel_attributes>lt=&lt;-
[password==password2]</panel_attributes><additional_attributes>100;100;100;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>350</x><y>1000</y><w>170</w><h>30</h></coordinates><panel_attributes>user : User</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>420</x><y>900</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>410</x><y>910</y><w>44</w><h>110</h></coordinates><panel_attributes>lt=&lt;-
m1=target</panel_attributes><additional_attributes>20;20;20;90</additional_attributes></element><element><type>com.umlet.element.custom.InitialState</type><coordinates><x>300</x><y>0</y><w>20</w><h>20</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.custom.FinalState</type><coordinates><x>570</x><y>870</y><w>20</w><h>20</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>430</x><y>860</y><w>160</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>140;20;20;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>290</x><y>0</y><w>40</w><h>100</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;80;20;20</additional_attributes></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>470</x><y>220</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>440</x><y>230</y><w>76</w><h>440</h></coordinates><panel_attributes>lt=&lt;-
m1=password
m2=Password</panel_attributes><additional_attributes>40;420;40;20</additional_attributes></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>470</x><y>650</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>350</x><y>220</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>340</x><y>240</y><w>48</w><h>260</h></coordinates><panel_attributes>lt=&lt;-
m2=Email
m1=email</panel_attributes><additional_attributes>20;240;20;10</additional_attributes></element><element><type>com.umlet.element.custom.SeqObjectActive</type><coordinates><x>350</x><y>480</y><w>20</w><h>30</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>CustomElementImpl</type><coordinates><x>190</x><y>510</y><w>200</w><h>30</h></coordinates><panel_attributes>uwetype=systemAction
checkEmail
</panel_attributes><additional_attributes/><custom_code>		int y = 0;
		
		// changes of the Default.java by Marianne Busch:

		// the first line indicates the UWE stereotype
		String firstLine = null;
		if (textlines.size()&gt;0){
			firstLine = textlines.get(0);
		}
		if (firstLine != null) {
			firstLine = firstLine.trim();
			final String uweconst = "uwetype=";
			if (firstLine.toLowerCase().startsWith(uweconst)) {

				final String pres = "presentation";
				final String nav = "navigation";
				final String proc = "process";
				
				// Stereotype name and path
				HashMap&lt;String, String&gt; types = new HashMap&lt;String, String&gt;();

				types.put("externalNode", nav);
				types.put("guidedTour", nav);
				types.put("index", nav);
				types.put("menu", nav);
				types.put("navigationClass", nav);
				types.put("query", nav);

				types.put("anchor", pres);
				types.put("anchoredCollection", pres);
				types.put("button", pres);
				types.put("customComponent", pres);
				types.put("fileUpload", pres);
				types.put("image", pres);
				types.put("inputForm", pres);
				types.put("iteratedPresentationGroup", pres);
				types.put("mediaObject", pres);
				types.put("presentationAlternatives", pres);
				types.put("presentationGroup", pres);
				types.put("presentationPage", pres);
				types.put("selection", pres);
				types.put("text", pres);
				types.put("textInput", pres);

				types.put("processClass", proc);
				types.put("systemAction", proc);
				types.put("userAction", proc);
				
				LinkedList&lt;String&gt; activities = new LinkedList&lt;String&gt;();
				activities.add("systemAction");
				activities.add("userAction");

				firstLine = firstLine.substring(uweconst.length()).trim();
				if (types.get(firstLine) != null) {
					String uweStereotypeName = firstLine;
					
					// draw border of element (class or activity)
					if (activities.contains(uweStereotypeName)){
						g2.drawRoundRect(0, 0, width, height, 30,	30);
					}else{
						drawRect(0, 0, width, height);
					}
					
					String uweSubfolder = types.get(firstLine);
					textlines.remove(0);

					// "&lt;&gt;" shows the name of the stereotype in Line 1
					String secondLine = null; 
					if (textlines.size()&gt;0){
						secondLine = textlines.get(0);
					}
					if (secondLine != null &amp;&amp; secondLine.equals("&lt;&gt;")) {
						y = y + textheight();
						printCenter("&lt;&lt;" + uweStereotypeName + "&gt;&gt;", y);
						textlines.remove(0);
					}

					try {
						// UWE stereotype path
						java.awt.image.BufferedImage img =
								javax.imageio.ImageIO
										.read(new java.io.FileInputStream("UWEStereotypes/"
												+ uweSubfolder + "/" + uweStereotypeName
												+ ".png"));
						// show image in the upper right corner
						g2.drawImage(img, this.getWidth() - 20, 4, this);
						
					} catch (java.io.IOException e) {
						y = y + textheight();
						printLeft("Please copy the 'UWEStereotypes' folder in the directory:", y);
						y = y + textheight();
						printLeft(System.getProperty("user.dir"), y);
					} catch (SecurityException se){
						y = y + textheight();
                        printLeft("Your version of UMLet prohibits to load custom images.", y);
                    }
					
				}else{
					if (firstLine.length() != 0){
						g2.drawString("Unknown UWE type", 2, this.getHeight() / 2);
					}
				}
			}
		}
		
		// center all lines and print left after the first
		// separation line ("--")
		boolean printLeft = false;
		for (String textline : textlines) {
			if (textline.equals("--")) {
				y = y + 6;
				drawLineHorizontal(y);
				y = y + 2;
				printLeft = true;
			} else {
				y = y + textheight();
				if (printLeft) {
					printLeft(textline, y);
				} else {
					printCenter(textline, y);
				}
			}
		}</custom_code></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>290</x><y>460</y><w>522</w><h>150</h></coordinates><panel_attributes>lt=&lt;-
[email invalid]</panel_attributes><additional_attributes>450;10;450;130;20;130</additional_attributes></element><element><type>com.umlet.element.custom.Decision</type><coordinates><x>270</x><y>570</y><w>40</w><h>40</h></coordinates><panel_attributes/><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>270</x><y>520</y><w>40</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;50;20;19</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>230</x><y>600</y><w>128</w><h>100</h></coordinates><panel_attributes>lt=&lt;-
[email valid]</panel_attributes><additional_attributes>60;80;60;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>230</x><y>420</y><w>510</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
[name == null]</panel_attributes><additional_attributes>490;30;20;30</additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>20</x><y>750</y><w>180</w><h>60</h></coordinates><panel_attributes>gets all attributes
from Register
(arrows not drawn here)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>180</x><y>790</y><w>130</w><h>110</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>20;20;110;90</additional_attributes></element></umlet_diagram>